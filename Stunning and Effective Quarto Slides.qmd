---
title: "Quarto Workshop Series: Stunning and Effective Slides"
author: "Center for Customer Insights and Digital Marketing"
institute: "Cal Poly Pomona"
date: "03/11/2025"
date-format: "M/D/YYYY"
format:
  revealjs:
    center: false
    logo: "logos/ccidm-cpp logo.png"
    theme: theme.scss
    slide-number: true
    toc: true
    toc-depth: 1
    #chalkboard: true #cannot use with self-contained
    embed-resources: true
    multiplex: true
    width: 1600
    height: 900
    margin: 0.1
    minScale: 0.2
    maxScale: 2.0
---

# Greetings and Introduction of the Team

-   Jae Jung, Ph.D., Professor of Marketing, Moderator
-   Carsten Lange, Ph.D., Professor of Economics, Presenter
-   Jarrod Griffin, Master's Student, Presenter

# Announcement

-   The workshop will be Recorded and will be available later
-   Workshop materials available at <https://github.com/CCIDM/effective-quarto-slides>.
-   Live slides available at <https://ccidm.github.io/effective-quarto-slides>
-   Questions 

# Overall Agenda

::: incremental
1.  Expected Learning outcomes
2.  Presentation formats (5 min)
3.  Enhancing Slide Aesthetics and Reveal.js Basics (15 min)
4.  Presenting slides for maximum engagement with audience (15 min)
5.  Reveal Themes (Sass) (15 min)
6.  Q&A (5 min)
:::


# 1. Expected Learning outcomes:

After taking this workshop, participants should be able to:

::: {.small-medium-text .incremental}
1.  Convert Revealjs presentation slides to other presentation formats (e.g., PPTX or Beamer). 
2.  Build a dynamic and interactive presentation (e.g., incremental lists, speaker notes, multiple columns, and branded elements). 
3.  Maximize engagement with audience using various engagement-enhancing features of Quarto (e.g., navigation menu, overview mode, speaker view, and chalkboard). 
4.  Enhance presentation aesthetics by applying themes, customizing layouts, and incorporating animations or transitions. 
5.  Customize themes using Sass variables to maintain brand consistency and create a distinctive presentation style. 
:::

# 2. Presentation Formats with `Dr. Lange`

-   Revealjs
-   PPTX

# 3. Enhancing Slide Aesthetics and Reveal.js Basics with `Dr. Lange`

## Topics to cover:

-   Title slides 
-   Slide transitions 
-   Slide visibility 
-   Fragments 
-   Numbering code lines
-   Incremental lists 
-   Content overflow 
-   Speaker notes 
-   Asides & Footnotes 
-   Footer & Logo 
-   Slides background 

[Demonstration to be provided separately]{style="color:blue; font-weight:bold;"}

# 4. Presenting slides for maximum engagement with audience with `Jarrod`

## Topics to Cover:

-   Navigation menu 
-   Overview mode 
-   Slide zoom 
-   Speaker view 
-   Slide numbers 
-   Print to PDF 
-   Navigation options 
-   Chalkboard 
-   Multiplex 

[Demonstration to be provided separately]{style="color:blue; font-weight:bold;"}

# 5. Reveal Themes (Scss) with `Jarrod`

## Topics to Cover:

-   Choosing and using themes 
-   Customizing themes 
-   Creating themes 
-   Sass Variables / CSS 




## Choosing and Using Themes

RevealJS offers a variety of built-in themes. To choose or use a theme:

::: {.incremental}
1. **Select a Theme:** You can either choose a built-in theme or provide your own via a custom SCSS file.
<https://quarto.org/docs/presentations/revealjs/themes.html>

2. **Link the Theme:** In your YAML header, set the `theme` option to your SCSS file. For example:
:::

. . .

```yaml
format:
  revealjs:
    theme: [default, theme.scss]
```

This tells RevealJS to use your custom styling for the presentation.


## Customizing Themes

::: callout-tip
-   Customization allows your slides to reflect your branding. 
-   With SCSS, you can easily override default styles. 
-   For example, to change the style of your headings and links, you might use:
:::

. . .

```scss
.reveal h1, .reveal h2, .reveal h3 {
  font-family: $font-primary;
  font-weight: bold;
}

.reveal a {
  color: $citrus !important;
  &:hover {
    text-decoration: underline;
  }
}
```

-   Experiment with these rules to adjust colors, fonts, and layout elements to your liking.
<https://quarto.org/docs/presentations/revealjs/themes.html>


## Creating Themes

::: incremental
-   Creating your own theme involves:

    1. **Starting from Scratch:** Create a new SCSS file.
    2. **Defining Variables:** Set up your color palette, typography, and other style constants.
    3. **Writing Rules:** Develop CSS rules targeting RevealJS slide elements.
    4. **Linking in Quarto:** Reference your SCSS file in the YAML header as shown earlier.

-   This process gives you full control over your presentation’s appearance.
:::

## Reveal Themes (SCSS)

-   `RevealJS` allows us to use SCSS for more powerful theming. In this section, we'll look at how our SCSS file defines styles for our presentation.

-   **Key concepts:**

    - **SCSS Variables:** Reusable values for colors, fonts, etc.
    - **SCSS Rules:** Custom styles for headings, text, code blocks, and more.
    - **Integration:** How our SCSS theme overrides default RevealJS styles.

. . .

-   Below is a snippet from our `theme.scss` file (for demonstration):

```scss
/* SCSS Variables for Cal Poly Pomona Branding */
$cpp-green: #00693D;
$cpp-gold:  #FFB81C;

// Typography
$font-primary: Arial, sans-serif;
$font-body: Arial, sans-serif;

.reveal {
  font-family: $font-body;
  color: $black;

  h1 {
    font-size: 2.5em;
    color: $cpp-green !important;
  }
  // ...
}
```

## Sass Variables / CSS

-   Sass variables are at the core of our theme’s flexibility. For instance:

    - **$cpp-green:** Used for primary headings and controls.
    - **$cpp-gold:** Defines secondary highlights and accents.
    - **$teal, $citrus, etc.:** Additional colors for links, progress bars, and code blocks.

. . .

-   Changing a variable’s value in one place updates your entire theme—making maintenance and updates very efficient.


## Demo: Applying the Theme

- <span class="fragment fade-in-then-out">Let's see the custom theme in action!</span>
- <span class="fragment fade-in-then-out">Notice how the defined styles (fonts, colors, code block designs) immediately change the look of your slides.</span>

. . .

|      **Live Experiment:**  

. . .

-   Try modifying a variable (e.g., `$cpp-green`) in your `theme.scss` file, then refresh the presentation to observe the changes.


## Conclusion

-   Today we covered:

    - **Reveal Themes (SCSS):** Understanding how SCSS integrates with RevealJS.
    - **Choosing & Using Themes:** Linking and selecting themes via the YAML header.
    - **Customizing Themes:** Overriding default styles with your own SCSS.
    - **Creating Themes:** Building a custom theme from scratch.
    - **Sass Variables / CSS:** Using variables for efficient, consistent styling.

- Feel free to experiment with the code and make the theme your own!


## Thank You!

# Q&A 

**Thank you for joining this Quarto Workshop!**\